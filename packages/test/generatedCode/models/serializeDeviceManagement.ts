import {DeviceManagementSubscriptionState} from './deviceManagementSubscriptionState';
import {DeviceManagement} from './index';
import {serializeApplePushNotificationCertificate} from './serializeApplePushNotificationCertificate';
import {serializeAuditEvent} from './serializeAuditEvent';
import {serializeComplianceManagementPartner} from './serializeComplianceManagementPartner';
import {serializeDetectedApp} from './serializeDetectedApp';
import {serializeDeviceAndAppManagementRoleAssignment} from './serializeDeviceAndAppManagementRoleAssignment';
import {serializeDeviceCategory} from './serializeDeviceCategory';
import {serializeDeviceCompliancePolicy} from './serializeDeviceCompliancePolicy';
import {serializeDeviceCompliancePolicyDeviceStateSummary} from './serializeDeviceCompliancePolicyDeviceStateSummary';
import {serializeDeviceCompliancePolicySettingStateSummary} from './serializeDeviceCompliancePolicySettingStateSummary';
import {serializeDeviceConfiguration} from './serializeDeviceConfiguration';
import {serializeDeviceConfigurationDeviceStateSummary} from './serializeDeviceConfigurationDeviceStateSummary';
import {serializeDeviceEnrollmentConfiguration} from './serializeDeviceEnrollmentConfiguration';
import {serializeDeviceManagementExchangeConnector} from './serializeDeviceManagementExchangeConnector';
import {serializeDeviceManagementPartner} from './serializeDeviceManagementPartner';
import {serializeDeviceManagementReports} from './serializeDeviceManagementReports';
import {serializeDeviceManagementSettings} from './serializeDeviceManagementSettings';
import {serializeDeviceManagementTroubleshootingEvent} from './serializeDeviceManagementTroubleshootingEvent';
import {serializeEntity} from './serializeEntity';
import {serializeImportedWindowsAutopilotDeviceIdentity} from './serializeImportedWindowsAutopilotDeviceIdentity';
import {serializeIntuneBrand} from './serializeIntuneBrand';
import {serializeIosUpdateDeviceStatus} from './serializeIosUpdateDeviceStatus';
import {serializeManagedDevice} from './serializeManagedDevice';
import {serializeManagedDeviceOverview} from './serializeManagedDeviceOverview';
import {serializeMobileThreatDefenseConnector} from './serializeMobileThreatDefenseConnector';
import {serializeNotificationMessageTemplate} from './serializeNotificationMessageTemplate';
import {serializeOnPremisesConditionalAccessSettings} from './serializeOnPremisesConditionalAccessSettings';
import {serializeRemoteAssistancePartner} from './serializeRemoteAssistancePartner';
import {serializeResourceOperation} from './serializeResourceOperation';
import {serializeRoleDefinition} from './serializeRoleDefinition';
import {serializeSoftwareUpdateStatusSummary} from './serializeSoftwareUpdateStatusSummary';
import {serializeTelecomExpenseManagementPartner} from './serializeTelecomExpenseManagementPartner';
import {serializeTermsAndConditions} from './serializeTermsAndConditions';
import {serializeWindowsAutopilotDeviceIdentity} from './serializeWindowsAutopilotDeviceIdentity';
import {serializeWindowsInformationProtectionAppLearningSummary} from './serializeWindowsInformationProtectionAppLearningSummary';
import {serializeWindowsInformationProtectionNetworkLearningSummary} from './serializeWindowsInformationProtectionNetworkLearningSummary';
import {Parsable, ParseNode, SerializationWriter} from '@microsoft/kiota-abstractions';

export function serializeDeviceManagement(writer: SerializationWriter, deviceManagement: DeviceManagement | undefined = {}) : void {
        serializeEntity(writer, deviceManagement)
            writer.writeObjectValueFromMethod("applePushNotificationCertificate", deviceManagement.applePushNotificationCertificate as any, serializeApplePushNotificationCertificate);
            writer.writeCollectionOfObjectValuesFromMethod("auditEvents", deviceManagement.auditEvents as any, serializeAuditEvent);
            writer.writeCollectionOfObjectValuesFromMethod("complianceManagementPartners", deviceManagement.complianceManagementPartners as any, serializeComplianceManagementPartner);
            writer.writeObjectValueFromMethod("conditionalAccessSettings", deviceManagement.conditionalAccessSettings as any, serializeOnPremisesConditionalAccessSettings);
            writer.writeCollectionOfObjectValuesFromMethod("detectedApps", deviceManagement.detectedApps as any, serializeDetectedApp);
            writer.writeCollectionOfObjectValuesFromMethod("deviceCategories", deviceManagement.deviceCategories as any, serializeDeviceCategory);
            writer.writeCollectionOfObjectValuesFromMethod("deviceCompliancePolicies", deviceManagement.deviceCompliancePolicies as any, serializeDeviceCompliancePolicy);
            writer.writeObjectValueFromMethod("deviceCompliancePolicyDeviceStateSummary", deviceManagement.deviceCompliancePolicyDeviceStateSummary as any, serializeDeviceCompliancePolicyDeviceStateSummary);
            writer.writeCollectionOfObjectValuesFromMethod("deviceCompliancePolicySettingStateSummaries", deviceManagement.deviceCompliancePolicySettingStateSummaries as any, serializeDeviceCompliancePolicySettingStateSummary);
            writer.writeObjectValueFromMethod("deviceConfigurationDeviceStateSummaries", deviceManagement.deviceConfigurationDeviceStateSummaries as any, serializeDeviceConfigurationDeviceStateSummary);
            writer.writeCollectionOfObjectValuesFromMethod("deviceConfigurations", deviceManagement.deviceConfigurations as any, serializeDeviceConfiguration);
            writer.writeCollectionOfObjectValuesFromMethod("deviceEnrollmentConfigurations", deviceManagement.deviceEnrollmentConfigurations as any, serializeDeviceEnrollmentConfiguration);
            writer.writeCollectionOfObjectValuesFromMethod("deviceManagementPartners", deviceManagement.deviceManagementPartners as any, serializeDeviceManagementPartner);
            writer.writeCollectionOfObjectValuesFromMethod("exchangeConnectors", deviceManagement.exchangeConnectors as any, serializeDeviceManagementExchangeConnector);
            writer.writeCollectionOfObjectValuesFromMethod("importedWindowsAutopilotDeviceIdentities", deviceManagement.importedWindowsAutopilotDeviceIdentities as any, serializeImportedWindowsAutopilotDeviceIdentity);
            writer.writeStringValue("intuneAccountId", deviceManagement.intuneAccountId);
            writer.writeObjectValueFromMethod("intuneBrand", deviceManagement.intuneBrand as any, serializeIntuneBrand);
            writer.writeCollectionOfObjectValuesFromMethod("iosUpdateStatuses", deviceManagement.iosUpdateStatuses as any, serializeIosUpdateDeviceStatus);
            writer.writeObjectValueFromMethod("managedDeviceOverview", deviceManagement.managedDeviceOverview as any, serializeManagedDeviceOverview);
            writer.writeCollectionOfObjectValuesFromMethod("managedDevices", deviceManagement.managedDevices as any, serializeManagedDevice);
            writer.writeCollectionOfObjectValuesFromMethod("mobileThreatDefenseConnectors", deviceManagement.mobileThreatDefenseConnectors as any, serializeMobileThreatDefenseConnector);
            writer.writeCollectionOfObjectValuesFromMethod("notificationMessageTemplates", deviceManagement.notificationMessageTemplates as any, serializeNotificationMessageTemplate);
            writer.writeCollectionOfObjectValuesFromMethod("remoteAssistancePartners", deviceManagement.remoteAssistancePartners as any, serializeRemoteAssistancePartner);
            writer.writeObjectValueFromMethod("reports", deviceManagement.reports as any, serializeDeviceManagementReports);
            writer.writeCollectionOfObjectValuesFromMethod("resourceOperations", deviceManagement.resourceOperations as any, serializeResourceOperation);
            writer.writeCollectionOfObjectValuesFromMethod("roleAssignments", deviceManagement.roleAssignments as any, serializeDeviceAndAppManagementRoleAssignment);
            writer.writeCollectionOfObjectValuesFromMethod("roleDefinitions", deviceManagement.roleDefinitions as any, serializeRoleDefinition);
            writer.writeObjectValueFromMethod("settings", deviceManagement.settings as any, serializeDeviceManagementSettings);
            writer.writeObjectValueFromMethod("softwareUpdateStatusSummary", deviceManagement.softwareUpdateStatusSummary as any, serializeSoftwareUpdateStatusSummary);
            writer.writeEnumValue<DeviceManagementSubscriptionState>("subscriptionState", deviceManagement.subscriptionState);
            writer.writeCollectionOfObjectValuesFromMethod("telecomExpenseManagementPartners", deviceManagement.telecomExpenseManagementPartners as any, serializeTelecomExpenseManagementPartner);
            writer.writeCollectionOfObjectValuesFromMethod("termsAndConditions", deviceManagement.termsAndConditions as any, serializeTermsAndConditions);
            writer.writeCollectionOfObjectValuesFromMethod("troubleshootingEvents", deviceManagement.troubleshootingEvents as any, serializeDeviceManagementTroubleshootingEvent);
            writer.writeCollectionOfObjectValuesFromMethod("windowsAutopilotDeviceIdentities", deviceManagement.windowsAutopilotDeviceIdentities as any, serializeWindowsAutopilotDeviceIdentity);
            writer.writeCollectionOfObjectValuesFromMethod("windowsInformationProtectionAppLearningSummaries", deviceManagement.windowsInformationProtectionAppLearningSummaries as any, serializeWindowsInformationProtectionAppLearningSummary);
            writer.writeCollectionOfObjectValuesFromMethod("windowsInformationProtectionNetworkLearningSummaries", deviceManagement.windowsInformationProtectionNetworkLearningSummaries as any, serializeWindowsInformationProtectionNetworkLearningSummary);
}
