import {Group} from './index';
import {serializeAppRoleAssignment} from './serializeAppRoleAssignment';
import {serializeAssignedLabel} from './serializeAssignedLabel';
import {serializeAssignedLicense} from './serializeAssignedLicense';
import {serializeCalendar} from './serializeCalendar';
import {serializeConversation} from './serializeConversation';
import {serializeConversationThread} from './serializeConversationThread';
import {serializeDirectoryObject} from './serializeDirectoryObject';
import {serializeDrive} from './serializeDrive';
import {serializeEvent} from './serializeEvent';
import {serializeExtension} from './serializeExtension';
import {serializeGroupLifecyclePolicy} from './serializeGroupLifecyclePolicy';
import {serializeGroupSetting} from './serializeGroupSetting';
import {serializeLicenseProcessingState} from './serializeLicenseProcessingState';
import {serializeOnenote} from './serializeOnenote';
import {serializeOnPremisesProvisioningError} from './serializeOnPremisesProvisioningError';
import {serializePlannerGroup} from './serializePlannerGroup';
import {serializeProfilePhoto} from './serializeProfilePhoto';
import {serializeResourceSpecificPermissionGrant} from './serializeResourceSpecificPermissionGrant';
import {serializeSite} from './serializeSite';
import {serializeTeam} from './serializeTeam';
import {Parsable, ParseNode, SerializationWriter} from '@microsoft/kiota-abstractions';

export function serializeGroup(writer: SerializationWriter, group: Group | undefined = {}) : void {
        serializeDirectoryObject(writer, group)
            writer.writeCollectionOfObjectValuesFromMethod("acceptedSenders", group.acceptedSenders as any, serializeDirectoryObject);
            writer.writeBooleanValue("allowExternalSenders", group.allowExternalSenders);
            writer.writeCollectionOfObjectValuesFromMethod("appRoleAssignments", group.appRoleAssignments as any, serializeAppRoleAssignment);
            writer.writeCollectionOfObjectValuesFromMethod("assignedLabels", group.assignedLabels as any, serializeAssignedLabel);
            writer.writeCollectionOfObjectValuesFromMethod("assignedLicenses", group.assignedLicenses as any, serializeAssignedLicense);
            writer.writeBooleanValue("autoSubscribeNewMembers", group.autoSubscribeNewMembers);
            writer.writeObjectValueFromMethod("calendar", group.calendar as any, serializeCalendar);
            writer.writeCollectionOfObjectValuesFromMethod("calendarView", group.calendarView as any, serializeEvent);
            writer.writeStringValue("classification", group.classification);
            writer.writeCollectionOfObjectValuesFromMethod("conversations", group.conversations as any, serializeConversation);
            writer.writeDateValue("createdDateTime", group.createdDateTime);
            writer.writeObjectValueFromMethod("createdOnBehalfOf", group.createdOnBehalfOf as any, serializeDirectoryObject);
            writer.writeStringValue("description", group.description);
            writer.writeStringValue("displayName", group.displayName);
            writer.writeObjectValueFromMethod("drive", group.drive as any, serializeDrive);
            writer.writeCollectionOfObjectValuesFromMethod("drives", group.drives as any, serializeDrive);
            writer.writeCollectionOfObjectValuesFromMethod("events", group.events as any, serializeEvent);
            writer.writeDateValue("expirationDateTime", group.expirationDateTime);
            writer.writeCollectionOfObjectValuesFromMethod("extensions", group.extensions as any, serializeExtension);
            writer.writeCollectionOfObjectValuesFromMethod("groupLifecyclePolicies", group.groupLifecyclePolicies as any, serializeGroupLifecyclePolicy);
            writer.writeCollectionOfPrimitiveValues<string>("groupTypes", group.groupTypes);
            writer.writeBooleanValue("hasMembersWithLicenseErrors", group.hasMembersWithLicenseErrors);
            writer.writeBooleanValue("hideFromAddressLists", group.hideFromAddressLists);
            writer.writeBooleanValue("hideFromOutlookClients", group.hideFromOutlookClients);
            writer.writeBooleanValue("isArchived", group.isArchived);
            writer.writeBooleanValue("isAssignableToRole", group.isAssignableToRole);
            writer.writeBooleanValue("isSubscribedByMail", group.isSubscribedByMail);
            writer.writeObjectValueFromMethod("licenseProcessingState", group.licenseProcessingState as any, serializeLicenseProcessingState);
            writer.writeStringValue("mail", group.mail);
            writer.writeBooleanValue("mailEnabled", group.mailEnabled);
            writer.writeStringValue("mailNickname", group.mailNickname);
            writer.writeCollectionOfObjectValuesFromMethod("memberOf", group.memberOf as any, serializeDirectoryObject);
            writer.writeCollectionOfObjectValuesFromMethod("members", group.members as any, serializeDirectoryObject);
            writer.writeStringValue("membershipRule", group.membershipRule);
            writer.writeStringValue("membershipRuleProcessingState", group.membershipRuleProcessingState);
            writer.writeCollectionOfObjectValuesFromMethod("membersWithLicenseErrors", group.membersWithLicenseErrors as any, serializeDirectoryObject);
            writer.writeObjectValueFromMethod("onenote", group.onenote as any, serializeOnenote);
            writer.writeStringValue("onPremisesDomainName", group.onPremisesDomainName);
            writer.writeDateValue("onPremisesLastSyncDateTime", group.onPremisesLastSyncDateTime);
            writer.writeStringValue("onPremisesNetBiosName", group.onPremisesNetBiosName);
            writer.writeCollectionOfObjectValuesFromMethod("onPremisesProvisioningErrors", group.onPremisesProvisioningErrors as any, serializeOnPremisesProvisioningError);
            writer.writeStringValue("onPremisesSamAccountName", group.onPremisesSamAccountName);
            writer.writeStringValue("onPremisesSecurityIdentifier", group.onPremisesSecurityIdentifier);
            writer.writeBooleanValue("onPremisesSyncEnabled", group.onPremisesSyncEnabled);
            writer.writeCollectionOfObjectValuesFromMethod("owners", group.owners as any, serializeDirectoryObject);
            writer.writeCollectionOfObjectValuesFromMethod("permissionGrants", group.permissionGrants as any, serializeResourceSpecificPermissionGrant);
            writer.writeObjectValueFromMethod("photo", group.photo as any, serializeProfilePhoto);
            writer.writeCollectionOfObjectValuesFromMethod("photos", group.photos as any, serializeProfilePhoto);
            writer.writeObjectValueFromMethod("planner", group.planner as any, serializePlannerGroup);
            writer.writeStringValue("preferredDataLocation", group.preferredDataLocation);
            writer.writeStringValue("preferredLanguage", group.preferredLanguage);
            writer.writeCollectionOfPrimitiveValues<string>("proxyAddresses", group.proxyAddresses);
            writer.writeCollectionOfObjectValuesFromMethod("rejectedSenders", group.rejectedSenders as any, serializeDirectoryObject);
            writer.writeDateValue("renewedDateTime", group.renewedDateTime);
            writer.writeBooleanValue("securityEnabled", group.securityEnabled);
            writer.writeStringValue("securityIdentifier", group.securityIdentifier);
            writer.writeCollectionOfObjectValuesFromMethod("settings", group.settings as any, serializeGroupSetting);
            writer.writeCollectionOfObjectValuesFromMethod("sites", group.sites as any, serializeSite);
            writer.writeObjectValueFromMethod("team", group.team as any, serializeTeam);
            writer.writeStringValue("theme", group.theme);
            writer.writeCollectionOfObjectValuesFromMethod("threads", group.threads as any, serializeConversationThread);
            writer.writeCollectionOfObjectValuesFromMethod("transitiveMemberOf", group.transitiveMemberOf as any, serializeDirectoryObject);
            writer.writeCollectionOfObjectValuesFromMethod("transitiveMembers", group.transitiveMembers as any, serializeDirectoryObject);
            writer.writeNumberValue("unseenCount", group.unseenCount);
            writer.writeStringValue("visibility", group.visibility);
}
