import {ServicePrincipal} from './index';
import {serializeAddIn} from './serializeAddIn';
import {serializeAppManagementPolicy} from './serializeAppManagementPolicy';
import {serializeAppRole} from './serializeAppRole';
import {serializeAppRoleAssignment} from './serializeAppRoleAssignment';
import {serializeClaimsMappingPolicy} from './serializeClaimsMappingPolicy';
import {serializeCustomSecurityAttributeValue} from './serializeCustomSecurityAttributeValue';
import {serializeDelegatedPermissionClassification} from './serializeDelegatedPermissionClassification';
import {serializeDirectoryObject} from './serializeDirectoryObject';
import {serializeEndpoint} from './serializeEndpoint';
import {serializeFederatedIdentityCredential} from './serializeFederatedIdentityCredential';
import {serializeHomeRealmDiscoveryPolicy} from './serializeHomeRealmDiscoveryPolicy';
import {serializeInformationalUrl} from './serializeInformationalUrl';
import {serializeKeyCredential} from './serializeKeyCredential';
import {serializeLicenseDetails} from './serializeLicenseDetails';
import {serializeOAuth2PermissionGrant} from './serializeOAuth2PermissionGrant';
import {serializePasswordCredential} from './serializePasswordCredential';
import {serializePasswordSingleSignOnSettings} from './serializePasswordSingleSignOnSettings';
import {serializePermissionScope} from './serializePermissionScope';
import {serializeSamlSingleSignOnSettings} from './serializeSamlSingleSignOnSettings';
import {serializeSynchronization} from './serializeSynchronization';
import {serializeTokenIssuancePolicy} from './serializeTokenIssuancePolicy';
import {serializeTokenLifetimePolicy} from './serializeTokenLifetimePolicy';
import {serializeVerifiedPublisher} from './serializeVerifiedPublisher';
import {Parsable, ParseNode, SerializationWriter} from '@microsoft/kiota-abstractions';

export function serializeServicePrincipal(writer: SerializationWriter, servicePrincipal: ServicePrincipal | undefined = {}) : void {
        serializeDirectoryObject(writer, servicePrincipal)
            writer.writeBooleanValue("accountEnabled", servicePrincipal.accountEnabled);
            writer.writeCollectionOfObjectValuesFromMethod("addIns", servicePrincipal.addIns as any, serializeAddIn);
            writer.writeCollectionOfPrimitiveValues<string>("alternativeNames", servicePrincipal.alternativeNames);
            writer.writeStringValue("appDescription", servicePrincipal.appDescription);
            writer.writeStringValue("appDisplayName", servicePrincipal.appDisplayName);
            writer.writeStringValue("appId", servicePrincipal.appId);
            writer.writeStringValue("applicationTemplateId", servicePrincipal.applicationTemplateId);
            writer.writeCollectionOfObjectValuesFromMethod("appManagementPolicies", servicePrincipal.appManagementPolicies as any, serializeAppManagementPolicy);
            writer.writeStringValue("appOwnerOrganizationId", servicePrincipal.appOwnerOrganizationId);
            writer.writeCollectionOfObjectValuesFromMethod("appRoleAssignedTo", servicePrincipal.appRoleAssignedTo as any, serializeAppRoleAssignment);
            writer.writeBooleanValue("appRoleAssignmentRequired", servicePrincipal.appRoleAssignmentRequired);
            writer.writeCollectionOfObjectValuesFromMethod("appRoleAssignments", servicePrincipal.appRoleAssignments as any, serializeAppRoleAssignment);
            writer.writeCollectionOfObjectValuesFromMethod("appRoles", servicePrincipal.appRoles as any, serializeAppRole);
            writer.writeCollectionOfObjectValuesFromMethod("claimsMappingPolicies", servicePrincipal.claimsMappingPolicies as any, serializeClaimsMappingPolicy);
            writer.writeCollectionOfObjectValuesFromMethod("createdObjects", servicePrincipal.createdObjects as any, serializeDirectoryObject);
            writer.writeObjectValueFromMethod("customSecurityAttributes", servicePrincipal.customSecurityAttributes as any, serializeCustomSecurityAttributeValue);
            writer.writeCollectionOfObjectValuesFromMethod("delegatedPermissionClassifications", servicePrincipal.delegatedPermissionClassifications as any, serializeDelegatedPermissionClassification);
            writer.writeStringValue("description", servicePrincipal.description);
            writer.writeStringValue("disabledByMicrosoftStatus", servicePrincipal.disabledByMicrosoftStatus);
            writer.writeStringValue("displayName", servicePrincipal.displayName);
            writer.writeCollectionOfObjectValuesFromMethod("endpoints", servicePrincipal.endpoints as any, serializeEndpoint);
            writer.writeStringValue("errorUrl", servicePrincipal.errorUrl);
            writer.writeCollectionOfObjectValuesFromMethod("federatedIdentityCredentials", servicePrincipal.federatedIdentityCredentials as any, serializeFederatedIdentityCredential);
            writer.writeStringValue("homepage", servicePrincipal.homepage);
            writer.writeCollectionOfObjectValuesFromMethod("homeRealmDiscoveryPolicies", servicePrincipal.homeRealmDiscoveryPolicies as any, serializeHomeRealmDiscoveryPolicy);
            writer.writeObjectValueFromMethod("info", servicePrincipal.info as any, serializeInformationalUrl);
            writer.writeCollectionOfObjectValuesFromMethod("keyCredentials", servicePrincipal.keyCredentials as any, serializeKeyCredential);
            writer.writeCollectionOfObjectValuesFromMethod("licenseDetails", servicePrincipal.licenseDetails as any, serializeLicenseDetails);
            writer.writeStringValue("loginUrl", servicePrincipal.loginUrl);
            writer.writeStringValue("logoutUrl", servicePrincipal.logoutUrl);
            writer.writeCollectionOfObjectValuesFromMethod("memberOf", servicePrincipal.memberOf as any, serializeDirectoryObject);
            writer.writeStringValue("notes", servicePrincipal.notes);
            writer.writeCollectionOfPrimitiveValues<string>("notificationEmailAddresses", servicePrincipal.notificationEmailAddresses);
            writer.writeCollectionOfObjectValuesFromMethod("oauth2PermissionGrants", servicePrincipal.oauth2PermissionGrants as any, serializeOAuth2PermissionGrant);
            writer.writeCollectionOfObjectValuesFromMethod("ownedObjects", servicePrincipal.ownedObjects as any, serializeDirectoryObject);
            writer.writeCollectionOfObjectValuesFromMethod("owners", servicePrincipal.owners as any, serializeDirectoryObject);
            writer.writeCollectionOfObjectValuesFromMethod("passwordCredentials", servicePrincipal.passwordCredentials as any, serializePasswordCredential);
            writer.writeObjectValueFromMethod("passwordSingleSignOnSettings", servicePrincipal.passwordSingleSignOnSettings as any, serializePasswordSingleSignOnSettings);
            writer.writeStringValue("preferredSingleSignOnMode", servicePrincipal.preferredSingleSignOnMode);
            writer.writeDateValue("preferredTokenSigningKeyEndDateTime", servicePrincipal.preferredTokenSigningKeyEndDateTime);
            writer.writeStringValue("preferredTokenSigningKeyThumbprint", servicePrincipal.preferredTokenSigningKeyThumbprint);
            writer.writeCollectionOfObjectValuesFromMethod("publishedPermissionScopes", servicePrincipal.publishedPermissionScopes as any, serializePermissionScope);
            writer.writeStringValue("publisherName", servicePrincipal.publisherName);
            writer.writeCollectionOfPrimitiveValues<string>("replyUrls", servicePrincipal.replyUrls);
            writer.writeStringValue("samlMetadataUrl", servicePrincipal.samlMetadataUrl);
            writer.writeObjectValueFromMethod("samlSingleSignOnSettings", servicePrincipal.samlSingleSignOnSettings as any, serializeSamlSingleSignOnSettings);
            writer.writeCollectionOfPrimitiveValues<string>("servicePrincipalNames", servicePrincipal.servicePrincipalNames);
            writer.writeStringValue("servicePrincipalType", servicePrincipal.servicePrincipalType);
            writer.writeStringValue("signInAudience", servicePrincipal.signInAudience);
            writer.writeObjectValueFromMethod("synchronization", servicePrincipal.synchronization as any, serializeSynchronization);
            writer.writeCollectionOfPrimitiveValues<string>("tags", servicePrincipal.tags);
            writer.writeStringValue("tokenEncryptionKeyId", servicePrincipal.tokenEncryptionKeyId);
            writer.writeCollectionOfObjectValuesFromMethod("tokenIssuancePolicies", servicePrincipal.tokenIssuancePolicies as any, serializeTokenIssuancePolicy);
            writer.writeCollectionOfObjectValuesFromMethod("tokenLifetimePolicies", servicePrincipal.tokenLifetimePolicies as any, serializeTokenLifetimePolicy);
            writer.writeCollectionOfObjectValuesFromMethod("transitiveMemberOf", servicePrincipal.transitiveMemberOf as any, serializeDirectoryObject);
            writer.writeObjectValueFromMethod("verifiedPublisher", servicePrincipal.verifiedPublisher as any, serializeVerifiedPublisher);
}
