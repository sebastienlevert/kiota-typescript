import {DeviceGuardLocalSystemAuthorityCredentialGuardState} from './deviceGuardLocalSystemAuthorityCredentialGuardState';
import {DeviceGuardVirtualizationBasedSecurityHardwareRequirementState} from './deviceGuardVirtualizationBasedSecurityHardwareRequirementState';
import {DeviceGuardVirtualizationBasedSecurityState} from './deviceGuardVirtualizationBasedSecurityState';
import {DeviceLicensingStatus} from './deviceLicensingStatus';
import {HardwareInformation} from './index';
import {serializeSharedAppleDeviceUser} from './serializeSharedAppleDeviceUser';
import {AdditionalDataHolder, Parsable, ParseNode, SerializationWriter} from '@microsoft/kiota-abstractions';

export function serializeHardwareInformation(writer: SerializationWriter, hardwareInformation: HardwareInformation | undefined = {}) : void {
            writer.writeNumberValue("batteryChargeCycles", hardwareInformation.batteryChargeCycles);
            writer.writeNumberValue("batteryHealthPercentage", hardwareInformation.batteryHealthPercentage);
            writer.writeNumberValue("batteryLevelPercentage", hardwareInformation.batteryLevelPercentage);
            writer.writeStringValue("batterySerialNumber", hardwareInformation.batterySerialNumber);
            writer.writeStringValue("cellularTechnology", hardwareInformation.cellularTechnology);
            writer.writeStringValue("deviceFullQualifiedDomainName", hardwareInformation.deviceFullQualifiedDomainName);
            writer.writeEnumValue<DeviceGuardLocalSystemAuthorityCredentialGuardState>("deviceGuardLocalSystemAuthorityCredentialGuardState", hardwareInformation.deviceGuardLocalSystemAuthorityCredentialGuardState);
            writer.writeEnumValue<DeviceGuardVirtualizationBasedSecurityHardwareRequirementState>("deviceGuardVirtualizationBasedSecurityHardwareRequirementState", hardwareInformation.deviceGuardVirtualizationBasedSecurityHardwareRequirementState);
            writer.writeEnumValue<DeviceGuardVirtualizationBasedSecurityState>("deviceGuardVirtualizationBasedSecurityState", hardwareInformation.deviceGuardVirtualizationBasedSecurityState);
            writer.writeNumberValue("deviceLicensingLastErrorCode", hardwareInformation.deviceLicensingLastErrorCode);
            writer.writeStringValue("deviceLicensingLastErrorDescription", hardwareInformation.deviceLicensingLastErrorDescription);
            writer.writeEnumValue<DeviceLicensingStatus>("deviceLicensingStatus", hardwareInformation.deviceLicensingStatus);
            writer.writeStringValue("esimIdentifier", hardwareInformation.esimIdentifier);
            writer.writeNumberValue("freeStorageSpace", hardwareInformation.freeStorageSpace);
            writer.writeStringValue("imei", hardwareInformation.imei);
            writer.writeStringValue("ipAddressV4", hardwareInformation.ipAddressV4);
            writer.writeBooleanValue("isEncrypted", hardwareInformation.isEncrypted);
            writer.writeBooleanValue("isSharedDevice", hardwareInformation.isSharedDevice);
            writer.writeBooleanValue("isSupervised", hardwareInformation.isSupervised);
            writer.writeStringValue("manufacturer", hardwareInformation.manufacturer);
            writer.writeStringValue("meid", hardwareInformation.meid);
            writer.writeStringValue("model", hardwareInformation.model);
            writer.writeStringValue("operatingSystemEdition", hardwareInformation.operatingSystemEdition);
            writer.writeStringValue("operatingSystemLanguage", hardwareInformation.operatingSystemLanguage);
            writer.writeNumberValue("operatingSystemProductType", hardwareInformation.operatingSystemProductType);
            writer.writeStringValue("osBuildNumber", hardwareInformation.osBuildNumber);
            writer.writeStringValue("phoneNumber", hardwareInformation.phoneNumber);
            writer.writeStringValue("productName", hardwareInformation.productName);
            writer.writeNumberValue("residentUsersCount", hardwareInformation.residentUsersCount);
            writer.writeStringValue("serialNumber", hardwareInformation.serialNumber);
            writer.writeCollectionOfObjectValuesFromMethod("sharedDeviceCachedUsers", hardwareInformation.sharedDeviceCachedUsers as any, serializeSharedAppleDeviceUser);
            writer.writeStringValue("subnetAddress", hardwareInformation.subnetAddress);
            writer.writeStringValue("subscriberCarrier", hardwareInformation.subscriberCarrier);
            writer.writeStringValue("systemManagementBIOSVersion", hardwareInformation.systemManagementBIOSVersion);
            writer.writeNumberValue("totalStorageSpace", hardwareInformation.totalStorageSpace);
            writer.writeStringValue("tpmManufacturer", hardwareInformation.tpmManufacturer);
            writer.writeStringValue("tpmSpecificationVersion", hardwareInformation.tpmSpecificationVersion);
            writer.writeStringValue("tpmVersion", hardwareInformation.tpmVersion);
            writer.writeStringValue("wifiMac", hardwareInformation.wifiMac);
            writer.writeCollectionOfPrimitiveValues<string>("wiredIPv4Addresses", hardwareInformation.wiredIPv4Addresses);
}
